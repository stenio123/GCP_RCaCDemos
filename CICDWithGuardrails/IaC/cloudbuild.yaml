steps:
- id: 'tf init'
  name: 'hashicorp/terraform:1.3.5'
  entrypoint: 'sh'
  args: 
  - '-c'
  - |
      echo "*************** TERRAFORM INIT ******************"
      echo "*************************************************"
      echo "current dir: `pwd`"
      echo "contents dir: `ls`"
      cd CICDWithGuardrails/IaC
      terraform init 
      cd ../..
# [START tf-plan]
- id: 'tf plan'
  name: 'hashicorp/terraform:1.3.5'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      echo "*************** TERRAFOM PLAN ******************"
      echo "*************************************************"
      echo "current dir: `pwd`"
      echo "contents dir: `ls`"
      cd CICDWithGuardrails/IaC
      terraform plan --out tfplan.binary
      terraform show -json tfplan.binary > tfplan.json
      echo "current dir: `pwd`"
      echo "contents dir: `ls`"
     # cd ../..
# [END tf-plan]
# [START guardrails]
- id: 'guardrails'
  name: 'alpine'
  entrypoint: 'sh'
  args:
  - '-c'
  - | 
      echo "*************** TERRAFOM PLAN ******************"
      echo "*************************************************"
      echo "current dir: `pwd`"
      echo "contents dir: `ls`"
      cd CICDWithGuardrails/IaC
      wget -O opa https://openpolicyagent.org/downloads/v0.47.0/opa_linux_amd64_static
      chmod 755 ./opa
      result=`./opa eval 'data.terraform.deny[x]' --data policies/ --input tfplan.json --format raw`
      echo "Policy eval result:"
      echo $result
      if [[ ! -z $result ]]
        then
          echo "Security Policy check fail, exiting ..."
          exit 1
        else
          echo "Security Policy passed. Continuing ..."
      fi
      cd ../..
# [END guardrails]

# [START tf-apply]
- id: 'tf apply'
  name: 'hashicorp/terraform:1.3.5'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      echo "*************** TERRAFOM APPLY ******************"
      echo "*************************************************"
      echo "current dir: `pwd`"
      echo "contents dir: `ls`"
      terraform apply -auto-approve
      cd ../..
# [END tf-apply] 