steps:
- id: 'tf init'
  name: 'hashicorp/terraform:1.3.5'
  entrypoint: 'sh'
  args: 
  - '-c'
  - |
      echo "*************** TERRAFORM INIT ******************"
      echo "*************************************************"
      echo "current dir: `pwd`"
      echo "contents dir: `ls`"
      cd CICDWithGuardrails/IaC
      terraform init 
      cd ../..
# [START tf-plan]
- id: 'tf plan'
  name: 'hashicorp/terraform:1.3.5'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      echo "*************** TERRAFOM PLAN ******************"
      echo "*************************************************"
      echo "current dir: `pwd`"
      echo "contents dir: `ls`"
      cd CICDWithGuardrails/IaC
      terraform plan --out tfplan.binary
      terraform show -json tfplan.binary > tfplan.json
     # cd ../..
# [END tf-plan]
# [START guardrails]
- id: 'guardrails'
  name: 'openpolicyagent/opa:0.47.1-static'
  args:
  - eval 
  - 'data.terraform.deny[x]'
  - --data
  - policies/
  - --input
  - tfplan.json
  - --format
  - raw
  - --fail-defined
# [END guardrails]

# [START tf-apply]
- id: 'tf apply'
  name: 'hashicorp/terraform:1.3.5'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      echo "*************** TERRAFOM APPLY ******************"
      echo "*************************************************"
      echo "current dir: `pwd`"
      echo "contents dir: `ls`"
      terraform apply -auto-approve
      cd ../..
# [END tf-apply] 